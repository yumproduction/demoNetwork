{"version":3,"sources":["components/Common/Preloader/Preloader.module.css","Redux/DialogsReducer.js","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/sun.png","assets/images/logo.png","components/Render/Render.module.css","components/Login/Login.jsx","components/Login/LoginContainer.jsx","components/Navbar/Nav.module.css","Redux/api/api.js","components/Users/Users.module.css","assets/images/preload.svg","serviceWorker.js","Redux/ProfileReducer.js","Redux/SidebarReducer.js","Redux/UsersReducer.js","Redux/appReducer.js","Redux/redux-store.js","components/Navbar/Nav.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Music/Music.jsx","components/Common/Paginator.jsx","components/Users/Users.jsx","components/Common/Preloader/Preloader.js","Redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPost/Post/Post.jsx","components/Profile/MyPost/MyPost.jsx","components/Profile/MyPost/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/NavContainer.jsx","components/Render/Render.jsx","components/Render/RenderContainer.jsx","App.js","index.js","Redux/auth-reducer.js","components/Header/Header.module.css","assets/images/user.png","utils/validators/validators.js","components/Profile/MyPost/MyPost.module.css","components/Login/Login.module.css","components/FormsControls/FormsControls.js","components/FormsControls/FormsControl.module.css","components/Common/Paginator.module.css","hoc/withAuthRedirect.js","components/Profile/MyPost/Post/Post.module.css","assets/images/moon.png"],"names":["module","exports","initialState","dialog","id","name","message","text","sendMessage","newMessageBody","type","dialogsReducer","state","action","LoginReduxForm","reduxForm","form","handleSubmit","error","className","classes","login","onSubmit","input","Field","placeholder","validate","requiredField","element","component","FormControl","check","styles","form_summary_error","LoginContainer","onSubmitForm","formData","props","email","password","rememberData","this","isAuth","to","React","Component","connect","auth","instance","axios","withCredentials","headers","baseURL","UsersAPI","getUsers","selectedPage","pageSize","get","then","response","data","unfollowUser","userId","delete","followUser","post","ProfileAPI","setUserProfile","getProfileStatus","updateProfileStatus","status","put","AuthAPI","authMe","rememberMe","logout","Boolean","window","location","hostname","match","SET_USER_PROFILE","ADD_POST","SET_STATUS","DELETE_POST","item","likes","profile","setStatus","profileReducer","newPostText","filter","p","postID","friends","friend","sidebarReducer","FOLLOW","UNFOLLOW","SETUSER","SET_PAGE","SET_TOTAL","TOGGLE_IS_FETCHING","FOLLOWING_PROCCESS","users","totalUserCount","isFetching","followingInProgress","portionSize","followSuccess","userID","unfollowSuccess","setCurrentPage","setToggleFetching","setToggleProgress","usersReducer","map","u","followed","initialized","nightMode","appReducer","reducers","combineReducers","messagePage","profilePage","sidebar","usersPage","authReducer","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","__store__","Navbar","navbar","activeClassName","active","img","src","moon","sun","alt","srcset","onClick","setMode","News","Settings","Music","Paginator","pageCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumebr","leftPortionNumber","rightPortionNumeber","wrap","pagination","key","page","selected","e","onPageChange","Users","currentPage","unfollow","follow","user","photos","small","userPhoto","disabled","some","btn","info","ns","city","country","Preloader","preloader","loader","createSelector","getPageSize","getTotalUsersCount","getSelectedPage","getIsFetching","getFollowingInProgress","UsersContainer","withAuthRedirect","dispatch","a","apiMethod","bind","actionCreator","resultCode","items","totalCount","ProfileStatusWithHooks","editMode","setEditMode","useEffect","head","onBlur","updateStatus","onChange","currentTarget","value","ProfileInfo","main","large","conText","fullName","profInfo","href","contacts","facebook","website","github","jobInfo","lookingForAJobDescription","Post","MyPost","memo","postElements","reverse","newPost","NewPostRedux","addPost","newPostBody","maxLength","maxLengthCreator","class","Profile","MyPostContainer","ProfileContainer","params","loggedUserId","setProfile","getStatus","withRouter","Header","header","logo","logged","log","HeaderContainer","setUserData","NavContainer","Nav","DialogsContainer","lazy","Render","path","render","exact","fallback","RenderContainer","initializeApp","authUser","App","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","messages","length","stopSubmit","_error","meta","hasError","touched","formControl","mapStateToPropsRedirect","RedirectComponent"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,OAAS,0BAA0B,KAAO,0B,4GCDjGC,EAAe,CACfC,OAAQ,CACJ,CAAEC,GAAI,EAAGC,KAAM,UACf,CAAED,GAAI,EAAGC,KAAM,UACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,UACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,WAEnBC,QAAS,CACL,CAAEF,GAAI,EAAGG,KAAM,OACf,CAAEH,GAAI,EAAGG,KAAM,eACf,CAAEH,GAAI,EAAGG,KAAM,+BAmBVC,EAAc,SAACC,GAAD,MAAqB,CAAEC,KAAM,eAAgBD,mBAGzDE,IAlBQ,WAAmC,IAAlCC,EAAiC,uDAAzBV,EAAcW,EAAW,uCACrD,OAAQA,EAAOH,MACX,IAAK,eACD,OAAO,2BACAE,GADP,IAEIN,QAAQ,GAAD,mBAAMM,EAAMN,SAAZ,CAAqB,CACxBF,GAAI,EACJG,KAAMM,EAAOJ,oBAGzB,QACI,OAAOG,K,mBC1BnBZ,EAAOC,QAAU,CAAC,KAAO,0BAA0B,QAAU,6BAA6B,KAAO,0BAA0B,IAAM,yBAAyB,MAAQ,2BAA2B,QAAU,+B,oBCDvMD,EAAOC,QAAU,IAA0B,iC,0CCA3CD,EAAOC,QAAU,IAA0B,kC,oBCC3CD,EAAOC,QAAU,CAAC,UAAY,4B,+JCqCda,EAHOC,YAAU,CAAEC,KAAM,SAAlBD,EA7BX,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MACxB,OAAO,yBAAKC,UAAWC,IAAQC,OAC3B,qCACA,0BAAMR,OAAO,GAAGS,SAAUL,EAAcE,UAAaC,IAAQJ,MACzD,yBAAKG,UAAWC,IAAQG,OACpB,kBAACC,EAAA,EAAD,CAAOd,KAAM,OAAQe,YAAa,QAASC,SAAUC,IACjDtB,KAAM,QAASuB,QAAQ,QAAQC,UAAWC,OAElD,yBAAKX,UAAWC,IAAQG,OACpB,kBAACC,EAAA,EAAD,CAAOd,KAAM,WAAYe,YAAa,WAAYC,SAAUC,IACxDtB,KAAM,WAAYuB,QAAQ,QAAQC,UAAWC,OAErD,yBAAKX,UAAWC,IAAQW,OACpB,kBAACP,EAAA,EAAD,CAAOd,KAAM,WAAYL,KAAM,aAAcwB,UAAW,UAD5D,IACwE,2CAEvEX,GAAS,yBAAKC,UAAWa,IAAOC,oBAC5Bf,GAIL,6BACI,+C,uBCpBVgB,E,4MAEFC,aAAe,SAACC,GACZ,EAAKC,MAAMhB,MAAMe,EAASE,MAAOF,EAASG,SAAUH,EAASI,e,uDAI7D,OAAIC,KAAKJ,MAAMK,OACJ,kBAAC,IAAD,CAAUC,GAAI,aAElB,kBAAC,EAAD,CAAgBrB,SAAUmB,KAAKN,mB,GAVjBS,IAAMC,WAkBpBC,uBAJS,SAAClC,GAAD,MAAW,CAC/B8B,OAAQ9B,EAAMmC,KAAKL,UAGiB,CAAErB,WAA3ByB,CAAoCZ,I,yDCxBnDlC,EAAOC,QAAU,CAAC,OAAS,oBAAoB,KAAO,kBAAkB,OAAS,oBAAoB,IAAM,mB,gCCD3G,mHAEM+C,EAAWC,SAAa,CAC1BC,iBAAiB,EACjBC,QAAS,CACL,UAAW,wCAEfC,QAAS,kDAIAC,EAAW,CACpBC,SADoB,SACXC,EAAcC,GACnB,OAAOR,EAASS,IAAT,qBAA2BF,EAA3B,kBAAiDC,IACnDE,MAAK,SAAAC,GACF,OAAOA,EAASC,SAG5BC,aAPoB,SAOPC,GACT,OAAOd,EAASe,OAAT,iBAA0BD,IAC5BJ,MAAK,SAAAC,GACF,OAAOA,EAASC,SAG5BI,WAboB,SAaTF,GACP,OAAOd,EAASiB,KAAT,iBAAwBH,IAC1BJ,MAAK,SAAAC,GACF,OAAOA,EAASC,UAKnBM,EAAa,CACtBC,eADsB,SACPL,GACX,OAAOd,EAASS,IAAT,kBAAwBK,IAC1BJ,MAAK,SAAAC,GACF,OAAOA,EAASC,SAG5BQ,iBAPsB,SAOLN,GACb,OAAOd,EAASS,IAAT,yBAA+BK,IACrCJ,MAAK,SAAAC,GACF,OAAOA,EAASC,SAGxBS,oBAbsB,SAaFC,GAChB,OAAOtB,EAASuB,IAAI,iBAAkB,CAACD,OAAQA,MAK1CE,EAAU,CACnBC,OADmB,WAEf,OAAOzB,EAASS,IAAT,YAEXpC,MAJmB,SAIbiB,EAAOC,GAA4B,IAAlBmC,EAAiB,wDACpC,OAAO1B,EAASiB,KAAK,aAAc,CAAC3B,QAAOC,WAAUmC,gBAEzDC,OAPmB,WAQf,OAAO3B,EAASe,OAAO,iB,mBC1D/B/D,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,oBAAoB,IAAM,mBAAmB,KAAO,oBAAoB,KAAO,oBAAoB,GAAK,kBAAkB,SAAW,wBAAwB,OAAS,sBAAsB,QAAU,uBAAuB,SAAW,0B,4GCD9RD,EAAOC,QAAU,IAA0B,qC,+CCYvB2E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oEChBAC,EAAmB,0CACnBC,EAAW,kCACXC,EAAa,oCACbC,EAAc,qCAGhBlF,EAAe,CACf+D,KAAM,CACF,CAAEoB,KAAM,EAAG9E,KAAM,KAAM+E,MAAO,IAC9B,CAAED,KAAM,EAAG9E,KAAM,eAAgB+E,MAAO,IACxC,CAAED,KAAM,EAAG9E,KAAM,yBAA0B+E,MAAO,IAClD,CAAED,KAAM,EAAG9E,KAAM,yBAA0B+E,MAAO,IAEtDC,QAAS,KACTjB,OAAQ,IAsCCH,EAAiB,SAACP,GAAD,MACzB,CAAElD,KAAMuE,EAAkBM,QAAS3B,IAE3B4B,EAAY,SAAClB,GAAD,MACpB,CAAE5D,KAAMyE,EAAYb,WAqBVmB,EA3DQ,WAAmC,IAAlC7E,EAAiC,uDAAzBV,EAAcW,EAAW,uCACrD,OAAQA,EAAOH,MACX,KAAKwE,EACD,OAAO,2BACAtE,GADP,IAEIqD,KAAK,GAAD,mBAAMrD,EAAMqD,MAAZ,CAAkB,CAClBoB,KAAM,EACN9E,KAAMM,EAAO6E,YACbJ,MAAO,QAInB,KAAKL,EACD,OAAO,2BACArE,GADP,IAEI2E,QAAS1E,EAAO0E,UAExB,KAAKJ,EACD,OAAO,2BACAvE,GADP,IAEI0D,OAAQzD,EAAOyD,SAEvB,KAAKc,EACD,OAAO,2BACAxE,GADP,IAEIqD,KAAMrD,EAAMqD,KAAK0B,QAAO,SAAAC,GAAC,OAAIA,EAAExF,KAAOS,EAAOgF,YAErD,QACI,OAAOjF,IChDfV,EAAe,CACf4F,QAAS,CACL,CAACC,OAAQ,UACT,CAACA,OAAQ,UACT,CAACA,OAAQ,SACT,CAACA,OAAQ,UACT,CAACA,OAAQ,SACT,CAACA,OAAQ,YAUFC,EANQ,WAAmC,IAAlCpF,EAAiC,uDAAzBV,EAG5B,OAAOU,GCZLqF,EAAS,8BACTC,EAAW,gCACXC,EAAU,gCACVC,EAAW,gCACXC,EAAY,iCACZC,EAAqB,0CACrBC,EAAqB,0CAEvBrG,EAAe,CACfsG,MAAO,GACPhD,SAAU,EACViD,eAAgB,EAChBlD,aAAc,EACdmD,YAAY,EACZC,oBAAqB,GACrBC,YAAa,IA0DJC,EAAgB,SAACC,GAAD,MAAa,CAAEpG,KAAMuF,EAAQa,WAC7CC,EAAkB,SAACD,GAAD,MAAa,CAAEpG,KAAMwF,EAAUY,WAEjDE,EAAiB,SAACzD,GAAD,MAAmB,CAAE7C,KAAM0F,EAAU7C,iBAEtD0D,EAAoB,SAACP,GAAD,MAAiB,CAAEhG,KAAM4F,EAAoBI,eACjEQ,EAAoB,SAACR,EAAYI,GAAb,MAAyB,CAAEpG,KAAM6F,EAAoBG,aAAYI,WAsCnFK,EAlGM,WAAmC,IAAlCvG,EAAiC,uDAAzBV,EAAcW,EAAW,uCACnD,OAAQA,EAAOH,MACX,KAAKuF,EACD,OAAO,2BACArF,GADP,IAEI4F,MAAO5F,EAAM4F,MAAMY,KAAI,SAAAC,GACnB,OAAIA,EAAEjH,KAAOS,EAAOiG,OACT,2BAAKO,GAAZ,IAAeC,UAAU,IAEtBD,OAGnB,KAAKnB,EACD,OAAO,2BACAtF,GADP,IAEI4F,MAAO5F,EAAM4F,MAAMY,KAAI,SAAAC,GACnB,OAAIA,EAAEjH,KAAOS,EAAOiG,OACT,2BAAKO,GAAZ,IAAeC,UAAU,IAEtBD,OAInB,KAAKlB,EACD,OAAO,2BACAvF,GADP,IAEI4F,MAAO3F,EAAO2F,QAGtB,KAAKJ,EACD,OAAO,2BACAxF,GADP,IACc2C,aAAc1C,EAAO0C,eAGvC,KAAK8C,EACD,OAAO,2BACAzF,GADP,IACc6F,eAAgB5F,EAAO4F,iBAEzC,KAAKH,EACD,OAAO,2BACA1F,GADP,IACc8F,WAAY7F,EAAO6F,aAErC,KAAKH,EACD,OAAO,2BACA3F,GADP,IAEI+F,oBAAqB9F,EAAO6F,WAAP,sBACb9F,EAAM+F,qBADO,CACc9F,EAAOiG,SACpClG,EAAM+F,oBAAoBhB,QAAO,SAAAvF,GAAE,OAAIA,IAAOS,EAAOiG,YAEnE,QACI,OAAOlG,I,0BClEfV,EAAe,CACfqH,aAAa,EACbC,WAAW,GAmCAC,EA/BI,WAAmC,IAAlC7G,EAAiC,uDAAzBV,EAAcW,EAAW,uCACjD,OAAQA,EAAOH,MACX,IAXe,iBAYX,OAAO,2BACAE,GADP,IAEI2G,aAAa,IAErB,IAfS,WAgBL,OAAO,2BACA3G,GADP,IAEI4G,WAAY5G,EAAM4G,YAE1B,QACI,OAAO5G,ICdf8G,EAAWC,YAAgB,CAC3BC,YAAajH,IACbkH,YAAapC,EACbqC,QAAS9B,EACT+B,UAAWZ,EACXpE,KAAMiF,IACNhH,KAAMiH,IACNC,IAAKT,IAIHU,EAAmBtD,OAAOuD,sCAAwCC,IAClEC,EAAQC,YAAYb,EAAUS,EAAiBK,YAAgBC,OAErE5D,OAAO6D,UAAYJ,EAEJA,Q,qJCUAK,GA7BA,SAACtG,GACZ,OAAO,yBAAKlB,UAAWC,KAAQwH,QAC/B,yBAAKzH,UAAaC,KAAQiE,MACxB,kBAAC,KAAD,CAAS1C,GAAK,WAAWkG,gBAAmBzH,KAAQ0H,QAApD,YAEF,yBAAK3H,UAAaC,KAAQiE,MACxB,kBAAC,KAAD,CAAS1C,GAAK,WAAWkG,gBAAmBzH,KAAQ0H,QAApD,aAEF,yBAAK3H,UAAaC,KAAQiE,MACxB,kBAAC,KAAD,CAAS1C,GAAK,QAAQkG,gBAAmBzH,KAAQ0H,QAAjD,SAEF,yBAAK3H,UAAaC,KAAQiE,MACxB,kBAAC,KAAD,CAAS1C,GAAK,SAASkG,gBAAmBzH,KAAQ0H,QAAlD,UAEF,6BACA,yBAAK3H,UAAaC,KAAQiE,MACxB,kBAAC,KAAD,CAAS1C,GAAK,SAASkG,gBAAmBzH,KAAQ0H,QAAlD,UAEF,6BACA,yBAAK3H,UAAaC,KAAQiE,MACxB,kBAAC,KAAD,CAAS1C,GAAK,YAAYkG,gBAAmBzH,KAAQ0H,QAArD,aAEF,6BACA,yBAAK3H,UAAaC,KAAQ2H,KACxB,yBAAKC,IAAK3G,EAAMmF,UAAayB,KAAOC,KAAKC,IAAI,GAAGC,OAAO,GAAGC,QAAWhH,EAAMiH,a,SCtBlEC,I,OANF,WACT,OAAO,yDCKIC,I,OANE,WACb,OAAO,6DCKIC,I,OAND,WACV,OAAO,wD,qEC8BIC,GA/BC,SAACrH,GAKb,IAJA,IAAIsH,EAAYC,KAAKC,KAAKxH,EAAMoE,eAAiBpE,EAAMmB,UAEnDsG,EAAQ,GAEHC,EAAI,EAAGA,GAAKJ,EAAWI,IAC5BD,EAAME,KAAKD,GAIf,IAAIE,EAAeL,KAAKC,KAAKF,EAAUtH,EAAMuE,aAVtB,EAWiBsD,mBAAS,GAX1B,oBAWlBC,EAXkB,KAWHC,EAXG,KAYnBC,GAAqBF,EAAgB,GAAI9H,EAAMuE,YAAa,EAC5D0D,EAAsBjI,EAAMuE,YAAYuD,EAK5C,OAAO,yBAAKhJ,UAAWC,KAAQmJ,MAC3B,yBAAKpJ,UAAWC,KAAQoJ,YACnBL,EAAe,GAAK,4BAAQd,QAAW,kBAAKe,EAAiBD,EAAc,KAAvD,QACpBL,EACAnE,QAAO,SAAAC,GAAC,OAAIA,GAAIyE,GAAqBzE,GAAG0E,KACxClD,KAAI,SAAAxB,GACD,OAAO,0BAAM6E,IAAO7E,EAAGzE,UAAaC,KAAQsJ,KAAOrI,EAAMkB,eAAiBqC,GAAKxE,KAAQuJ,SAAUtB,QAAS,SAACuB,GAAD,OAAOvI,EAAMwI,aAAajF,KAAKA,MAE5IqE,EAAcE,GAAiB,4BAAQd,QAAW,kBAAIe,EAAiBD,EAAc,KAAtD,WC4B7BW,GAnDH,SAAC,GAAsI,IAApIlE,EAAmI,EAAnIA,YAAamE,EAAsH,EAAtHA,YAAavH,EAAyG,EAAzGA,SAAUgD,EAA+F,EAA/FA,MAAOjD,EAAwF,EAAxFA,aAAcoD,EAA0E,EAA1EA,oBAAqBqE,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,OAAQJ,EAAmC,EAAnCA,aAAcpE,EAAqB,EAArBA,eAGzH,OAAO,6BACH,kBAAC,GAAD,CAAWG,YAAeA,EAAamE,YAAaA,EAAavH,SAAYA,EAASqH,aAAcA,EACpGpE,eAAgBA,EAAgBlD,aAAgBA,IAE/CiD,EAAMY,KAAI,SAAAC,GAAC,OAAI,yBAAKoD,IAAKpD,EAAEjH,IACxB,yBAAKe,UAAWC,KAAQoF,OACpB,yBAAKrF,UAAWC,KAAQ8J,MACpB,kBAAC,KAAD,CAASvI,GAAI,YAAc0E,EAAEjH,IACzB,yBAAK4I,IAAuB,MAAlB3B,EAAE8D,OAAOC,MACf/D,EAAE8D,OAAOC,MAAQC,KACjBlC,IAAI,GAAGhI,UAAWC,KAAQ2H,OAEjC1B,EAAEC,SACC,4BAAQgE,SAAU3E,EAAoB4E,MAAK,SAAAnL,GAAE,OAAIA,IAAOiH,EAAEjH,MACtDiJ,QAAS,WACL2B,EAAS3D,EAAEjH,KAEfe,UAAWC,KAAQoK,KAJvB,YAKE,4BAAQF,SAAU3E,EAAoB4E,MAAK,SAAAnL,GAAE,OAAIA,IAAOiH,EAAEjH,MACxDiJ,QAAS,WACL4B,EAAO5D,EAAEjH,KAEbe,UAAWC,KAAQoK,KAJrB,WAMV,yBAAKrK,UAAWC,KAAQqK,MACpB,yBAAKtK,UAAWC,KAAQsK,IACpB,yBAAKvK,UAAWC,KAAQf,MACnBgH,EAAEhH,MAEP,yBAAKc,UAAWC,KAAQkD,QACnB+C,EAAE/C,SAGX,yBAAKnD,UAAU,QACf,yBAAKA,UAAWC,KAAQ0D,UACpB,yBAAK3D,UAAWC,KAAQuK,MACnB,kBADL,KAGA,yBAAKxK,UAAWC,KAAQwK,SACnB,+B,8BCtCdC,GANC,SAACxJ,GACb,OAAO,yBAAKlB,UAAaC,KAAQ0K,WAC7B,yBAAK3K,UAAaC,KAAQ2K,W,mBCArBvF,GAAQwF,cAJQ,SAACpL,GAC1B,OAAOA,EAAMmH,UAAUvB,SAGwB,SAACA,GAChD,OAAOA,EAAMb,QAAO,SAAA0B,GAAC,OAAG,QAIf4E,GAAc,SAACrL,GACxB,OAAOA,EAAMmH,UAAUvE,UAOd0I,IAJmBF,cAAe,SAACpL,GAC5C,OAAOA,EAAMmH,UAAUvE,SAASmC,QAAO,SAAA0B,GAAC,OAAG,QAGb,SAACzG,GAC/B,OAAOA,EAAMmH,UAAUtB,iBAGd0F,GAAkB,SAACvL,GAC5B,OAAOA,EAAMmH,UAAUxE,cAGd6I,GAAgB,SAACxL,GAC1B,OAAOA,EAAMmH,UAAUrB,YAGd2F,GAAyB,SAACzL,GACnC,OAAOA,EAAMmH,UAAUpB,qBCvBrB2F,G,4MAgBFzB,aAAe,SAACjF,GACZ,EAAKvD,MAAMiB,SAASsC,EAAG,EAAKvD,MAAMmB,W,kEAblCf,KAAKJ,MAAMiB,SAASb,KAAKJ,MAAMkB,aAAcd,KAAKJ,MAAMmB,Y,+BAiBxD,OAAO,oCACFf,KAAKJ,MAAMqE,WAAa,kBAAC,GAAD,MAAgB,kBAAC,GAAD,CAAOmE,aAAcpI,KAAKoI,aAC/DpE,eAAgBhE,KAAKJ,MAAMoE,eAC3BjD,SAAUf,KAAKJ,MAAMmB,SACrBD,aAAcd,KAAKJ,MAAMkB,aACzBiD,MAAO/D,KAAKJ,MAAMmE,MAClByE,OAAQxI,KAAKJ,MAAM4I,OACnBD,SAAUvI,KAAKJ,MAAM2I,SACrBrE,oBAAqBlE,KAAKJ,MAAMsE,oBAChCC,YAAenE,KAAKJ,MAAMuE,mB,GA9BbhE,IAAMC,WA+CpBwF,eACXkE,KACAzJ,aAdkB,SAAClC,GACnB,MAAO,CACH4F,MAAOA,GAAM5F,GACb4C,SAAUyI,GAAYrL,GACtB6F,eAAgByF,GAAmBtL,GACnC2C,aAAc4I,GAAgBvL,GAC9B8F,WAAY0F,GAAcxL,GAC1B+F,oBAAqB0F,GAAuBzL,GAC5CgG,YAAahG,EAAMmH,UAAUnB,eAO7B,CACIqE,OX6CU,SAAC7K,GACnB,8CAAO,WAAOoM,GAAP,iBAAAC,EAAA,6DACCC,EAAYrJ,IAASW,WAAW2I,KAAKtJ,KACrCuJ,EAAgB/F,EACpB2F,EAAStF,GAAkB,EAAM9G,IAH9B,SAIcsM,EAAUtM,GAJxB,OAMqB,IANrB,OAMMyM,YACLL,EAASI,EAAcxM,IAE3BoM,EAAStF,GAAkB,EAAO9G,IAT/B,2CAAP,uDW9CgB4K,SXiCI,SAAC5K,GACrB,8CAAO,WAAOoM,GAAP,iBAAAC,EAAA,6DACCC,EAAYrJ,IAASW,WAAW2I,KAAKtJ,KACrCuJ,EAAgB7F,EACpByF,EAAStF,GAAkB,EAAM9G,IAH9B,SAIcsM,EAAUtM,GAJxB,OAKqB,IALrB,OAKMyM,YACLL,EAASI,EAAcxM,IAE3BoM,EAAStF,GAAkB,EAAO9G,IAR/B,2CAAP,uDWlC0B4G,iBAClBE,oBAAmB5D,SXsBP,SAACC,EAAcC,GACnC,8CAAO,WAAOgJ,GAAP,eAAAC,EAAA,6DACHD,EAASxF,EAAezD,IACxBiJ,EAASvF,GAAkB,IAFxB,SAGc5D,IAASC,SAASC,EAAcC,GAH9C,OAGCI,EAHD,OAIH4I,EAASvF,GAAkB,IAC3BuF,GAZgBhG,EAYC5C,EAAKkJ,MAZK,CAAEpM,KAAMyF,EAASK,WAa5CgG,GAXsB/F,EAWC7C,EAAKmJ,WAXc,CAAErM,KAAM2F,EAAWI,oBAK1D,iCALkB,IAACA,EAFND,IAOb,OAAP,yDW5BW6B,CAObiE,I,oBChBaU,IC3CapK,IAAMC,UDDH,SAACR,GAAW,IAAD,EAER6H,oBAAS,GAFD,oBAEjC+C,EAFiC,KAEvBC,EAFuB,OAIZhD,mBAAS7H,EAAMiC,QAJH,oBAIjCA,EAJiC,KAIzBkB,EAJyB,KAMtC2H,qBAAU,WACN3H,EAAUnD,EAAMiC,UACjB,CAACjC,EAAMiC,SAeV,OAAO,yBAAKnD,UAAWC,KAAQkD,QAC3B,6BACI,wBAAInD,UAAWC,KAAQgM,MAAvB,WAEJ,6BACI,2BAAO1M,KAAK,OAAOe,YAAY,YAC3BN,UAAWC,KAAQG,MACnB8H,QApBW,WACnB6D,GAAY,IAoBJG,OAjBa,WACrBH,GAAY,GACZ7K,EAAMiL,aAAahJ,IAgBXiJ,SAbS,SAAC3C,GAClBpF,EAAUoF,EAAE4C,cAAcC,QAalBA,MAAOnJ,KAEf,6BACK2I,GACG,4BAAQ9L,UAAWC,KAAQoK,KAA3B,SAGR,gCEHOkC,GAjCK,SAACrL,GACnB,OAAKA,EAAMkD,QAGJ,6BACL,yBAAKpE,UAAWC,KAAQuM,MACtB,yBAAK3E,IAAoC,OAA/B3G,EAAMkD,QAAQ4F,OAAOyC,OACE,OAA/BvL,EAAMkD,QAAQ4F,OAAOC,MAAiBF,KAAO7I,EAAMkD,QAAQ4F,OAAOyC,MAAOzM,UAAWC,KAAQ2H,MAC9F,yBAAK5H,UAAWC,KAAQyM,SACtB,wBAAI1M,UAAWC,KAAQgM,MAAO/K,EAAMkD,QAAQuI,UAC5C,yBAAK3M,UAAWC,KAAQ2M,UACtB,wCAAa,uBAAGC,KAAM3L,EAAMkD,QAAQ0I,SAASC,UAAY7L,EAAMkD,QAAQ0I,SAASC,SAC1E7L,EAAMkD,QAAQ0I,SAASC,SAD8D,MAE3F,uCAAY,uBAAGF,KAAyC,OAAnC3L,EAAMkD,QAAQ0I,SAASE,QAC1C,KAAO9L,EAAMkD,QAAQ0I,SAASE,SADpB,IACgC9L,EAAMkD,QAAQ0I,SAASE,QAC7D9L,EAAMkD,QAAQ0I,SAASE,QADgD,MAE7E,sCAAW,uBAAGH,KAAO3L,EAAMkD,QAAQ0I,SAASG,OACnC/L,EAAMkD,QAAQ0I,SAASG,OAA9B,MAAwC/L,EAAMkD,QAAQ0I,SAASG,OAC3D/L,EAAMkD,QAAQ0I,SAASG,OAD6C,QAI9E,yBAAKjN,UAAWC,KAAQiN,SAC1B,6BACM,wBAAIlN,UAAWC,KAAQgM,MAAvB,aACA,iDAAmE,OAA5C/K,EAAMkD,QAAQ+I,0BAClC,IAAMjM,EAAMkD,QAAQ+I,2BACtB,kBAAC,GAAD,CAAwBhK,OAAUjC,EAAMiC,OAAQgJ,aAAejL,EAAMiL,kBAxBrE,kBAAC,GAAD,O,wCCOIiB,GAZF,SAAClM,GACZ,OAAO,6BACL,yBAAKlB,UAAWC,KAAQiE,MACpBhD,EAAMkD,QAA0D,yBAAKyD,IAAoC,OAA/B3G,EAAMkD,QAAQ4F,OAAOyC,OAChE,OAA/BvL,EAAMkD,QAAQ4F,OAAOC,MAAiBF,KAAO7I,EAAMkD,QAAQ4F,OAAOyC,MAAOzM,UAAWC,KAAQ2H,MAD5E,yBAAKC,IAAOkC,KAAM/J,UAAaC,KAAQ2H,MAGzD,2BAAI1G,EAAM/B,UAEZ,yCAAqB+B,EAAMiD,Q,qCCLzBkJ,GAAS5L,IAAM6L,MAAK,SAAApM,GAGxB,IAAIqM,EAAe,YAAIrM,EAAM4B,MAC5B0K,UACAvH,KAAI,SAAAnD,GACH,OAAO,kBAAC,GAAD,CAAM3D,QAAS2D,EAAK1D,KAAM+E,MAAOrB,EAAKqB,MAAOC,QAASlD,EAAMkD,aASrE,OAAO,yBAAKpE,UAAWC,KAAQJ,MAC7B,yBAAKG,UAAWC,KAAQwN,SACtB,wBAAIzN,UAAWC,KAAQgM,MAAvB,YACA,kBAACyB,GAAD,CAAcvN,SARC,SAACmM,GAClBpL,EAAMyM,QAAQrB,EAAMsB,iBASpB,yBAAK5N,UAAWC,KAAQ6C,MACtB,2BAAIyK,QAKJM,GAAYC,aAAiB,IAa7BJ,GAAe9N,aAAU,CAAEC,KAAM,eAAlBD,EAXP,SAACsB,GACb,OAAO,0BAAMxB,OAAO,GAAGS,SAAUe,EAAMpB,cACrC,kBAACO,GAAA,EAAD,CAAOK,UAAWC,KAAazB,KAAM,cACnCuB,QAAQ,WACRH,YAAa,eACbC,SAAU,CAACC,KAAeqN,MAC5B,4BAAQE,MAAO9N,KAAQoK,KAAvB,eAOWgD,MCjCA1L,gBATS,SAAClC,GACvB,MAAO,CACLqD,KAAMrD,EAAMiH,YAAY5D,KACxByB,YAAa9E,EAAMiH,YAAYnC,YAC/BH,QAAS3E,EAAMiH,YAAYtC,WAKS,CAAEuJ,QnBqCnB,SAACpJ,GAAD,MAAkB,CAAEhF,KAAMwE,EAAUQ,iBmBrC5C5C,CAAsC0L,I,qBCDtCW,GARC,SAAC9M,GACf,OAAO,yBAAKlB,UAAaC,KAAQuM,MAC/B,kBAAC,GAAD,CAAapI,QAAWlD,EAAMkD,QAASjB,OAAUjC,EAAMiC,OACvDgJ,aAAgBjL,EAAMiL,eACtB,kBAAC8B,GAAD,CAAiB7J,QAAWlD,EAAMkD,YCDhC8J,G,kLAGE,IAAIvL,EAASrB,KAAKJ,MAAM2C,MAAMsK,OAAOxL,OAChCA,IACDA,EAASrB,KAAKJ,MAAMkN,cAGxB9M,KAAKJ,MAAMmN,WAAW1L,GACtBrB,KAAKJ,MAAMoN,UAAU3L,K,+BAIrB,OAAO,kBAAC,GAAD,iBAAarB,KAAKJ,MAAlB,CAAyBkD,QAAS9C,KAAKJ,MAAMkD,QACpDjB,OAAQ7B,KAAKJ,MAAMiC,OACnBgJ,aAAgB7K,KAAKJ,MAAMiL,oB,GAfJ1K,IAAMC,WA0BtBwF,eACXvF,aARkB,SAAClC,GAAD,MAAY,CAC9B2E,QAAS3E,EAAMiH,YAAYtC,QAC3BjB,OAAQ1D,EAAMiH,YAAYvD,OAC1BiL,aAAc3O,EAAMmC,KAAK3C,GACzBsC,OAAQ9B,EAAMmC,KAAKL,UAIM,CAAC8M,WrB2BJ,SAAC1L,GAAD,8CAAY,WAAO0I,GAAP,SAAAC,EAAA,kEAClCD,EADkC,KACzBrI,EADyB,SACJD,IAAWC,eAAeL,GADtB,iGAAZ,uDqB3BgB2L,UrB+BjB,SAAC3L,GAAD,8CAAY,WAAO0I,GAAP,eAAAC,EAAA,sEAChBvI,IAAWE,iBAAiBN,GADZ,OAC7BF,EAD6B,OAEjC4I,EAAShH,EAAU5B,IAFc,2CAAZ,uDqB/B4B0J,arBoCzB,SAAChJ,GAAD,8CAAY,WAAOkI,GAAP,SAAAC,EAAA,sDAGR,IAFbvI,IAAWG,oBAAoBC,GAEjCuI,YACTL,EAAShH,EAAUlB,IAJa,2CAAZ,yDqBnCxBoL,KACAnD,KAHWlE,CAIbgH,I,yCCxBaM,GAVA,SAACtN,GAEd,OAAO,4BAAQlB,UAAWC,KAAQwO,QAChC,yBAAK5G,IAAK6G,KAAM1O,UAAWC,KAAQ2H,MAD9B,IACsC,wBAAI5H,UAAWC,KAAQgM,MAAvB,UAC3C,wBAAIjM,UAAWC,KAAQqK,MAAOpJ,EAAMK,OAClC,yBAAKvB,UAAaC,KAAQ0O,QAASzN,EAAMhB,MAAzC,IAAgD,uBAAGgI,QAAWhH,EAAMsC,OAAOxD,UAAWC,KAAQuD,QAA9C,WAAyE,kBAAC,KAAD,CAAShC,GAAI,SAAUxB,UAAWC,KAAQ2O,KAA1C,YCLzHC,G,uKAGF,OAAO,kBAAC,GAAWvN,KAAKJ,W,GAHEO,IAAMC,WAYrBC,gBALS,SAAClC,GAAD,MAAW,CACjC8B,OAAQ9B,EAAMmC,KAAKL,OACnBrB,MAAOT,EAAMmC,KAAK1B,SAGoB,CAAC4O,gBAAatL,YAAvC7B,CAAgDkN,ICRzDE,G,uKAEC,OAAO,kBAACC,GAAD,CAAQ7G,QAAW7G,KAAKJ,MAAMiH,QAAS9B,UAAa/E,KAAKJ,MAAMmF,gB,GAFlD5E,IAAMC,WAUlBC,gBAJM,SAAClC,GAAD,MAAW,CAC9B4G,UAAW5G,EAAMsH,IAAIV,aAIrB,CAAE8B,QrBWmB,iBAClB,CAAE5I,KA7BU,cqBgBFoC,CACAoN,ICNTE,GAAmBxN,IAAMyN,MAAK,WAAQ,OAAO,iCAC7CnO,GAAiBU,IAAMyN,MAAK,WAAQ,OAAO,4CAwBlCC,GAtBF,SAACjO,GACV,OAAO,6BACH,4BAAQlB,UAAW,UAAoC,IAApBkB,EAAMmF,UAAqB,QAAU,MACxE,yBAAKrG,UAAW,aAAuC,IAApBkB,EAAMmF,UAAqB,YAAc,KACxE,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,yBAAKrG,UAAU,uBACX,kBAAC,KAAD,CAAOoP,KAAK,oBAAoBC,OAAQ,kBAAM,kBAAC,GAAD,SAC9C,kBAAC,KAAD,CAAOC,OAAK,EAACF,KAAK,WAAWC,OAAQ,WACjC,OAAO,kBAAC,WAAD,CAAUE,SAAU,kBAAC,GAAD,OAAe,kBAACN,GAAD,UAE9C,kBAAC,KAAD,CAAOG,KAAK,QAAQC,OAAQ,kBAAM,kBAAC,GAAD,SAClC,kBAAC,KAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,kBAAC,GAAD,SACnC,kBAAC,KAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,kBAAC,GAAD,SACnC,kBAAC,KAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAM,kBAAC,GAAD,SACtC,kBAAC,KAAD,CAAOD,KAAK,SAASC,OAAQ,WAC7B,OAAO,kBAAC,WAAD,CAAUE,SAAU,kBAAC,GAAD,OAAe,kBAACxO,GAAD,c,+BCvBpDyO,G,kLAGElO,KAAKJ,MAAMuO,kB,+BAGX,OAAKnO,KAAKJ,MAAMkF,YACX9E,KAAKJ,MAAMK,OAMT,kBAAC,GAAWD,KAAKJ,OALb,6BACH,kBAAC,KAAD,CAAUM,GAAG,WACb,kBAAC,KAAD,CAAO4N,KAAK,SAASC,OAAQ,kBAAM,kBAAC,WAAD,UAJP,yBAAKrP,UAAWC,KAAQ0K,WAAW,kBAAC,GAAD,W,GANjDlJ,IAAMC,WAyBrB6M,gBAAW5M,aARJ,SAAClC,GACnB,MAAO,CACH8B,OAAQ9B,EAAMmC,KAAKL,OACnBL,MAAOzB,EAAMyB,MACbkF,YAAa3G,EAAMsH,IAAIX,YACvBC,UAAW5G,EAAMsH,IAAIV,aAIzB,CAAEoJ,cvBFuB,kBAAM,SAACpE,GAChCA,EAASqE,eACJnN,MAAK,WACF8I,EARP,CAAE9L,KA3BgB,yBuBiCGoC,CACH6N,KCDRG,GAzBH,SAACzO,GACX,OACE,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAUiG,MAAOA,GACf,kBAAC,GAAD,SCHRyI,IAASP,OACP,kBAAC,IAAMQ,WAAP,KACI,kBAAC,GAAD,OAEJC,SAASC,eAAe,S7BoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3N,MAAK,SAAA4N,GACJA,EAAaC,gBAEdC,OAAM,SAAAtQ,GACLuQ,QAAQvQ,MAAMA,EAAMZ,a,4N8BnIxBJ,EAAe,CACfE,GAAI,KACJkC,MAAO,KACPjB,MAAO,KACPqB,QAAQ,GAqBCuN,EAAc,SAAC7P,EAAIkC,EAAOjB,EAAOqB,GAAnB,MACtB,CAAEhC,KA7Be,gBA6BMkD,KAAM,CAAExD,KAAIkC,QAAOjB,QAAOqB,YAEzCmO,EAAW,yDAAM,WAAOrE,GAAP,uBAAAC,EAAA,sEACLjI,IAAQC,SADH,OAGO,KAF7Bd,EADsB,QAGbC,KAAKiJ,aAAmB,EACNlJ,EAASC,KAAKA,KAAnCxD,EAD0B,EAC1BA,GAAIkC,EADsB,EACtBA,MAAOjB,EADe,EACfA,MACjBmL,EAASyD,EAAY7P,EAAIkC,EAAOjB,GAAO,KALjB,2CAAN,uDAUXA,EAAQ,SAACiB,EAAOC,EAAUmC,GAAlB,8CAAiC,WAAO8H,GAAP,iBAAAC,EAAA,sEAC7BjI,IAAQnD,MAAMiB,EAAOC,EAAUmC,GADF,OAGjB,KAF7Bf,EAD8C,QAGrCC,KAAKiJ,WACdL,EAASqE,MAGLvQ,EAAUqD,EAASC,KAAK8N,SAASC,OAAS,EAC1ChO,EAASC,KAAK8N,SAAS,GAAK,0BAChClF,EAASoF,YAAW,QAChB,CAAEC,OAAQvR,MAVgC,2CAAjC,uDAcRqE,EAAS,yDAAM,WAAO6H,GAAP,SAAAC,EAAA,sEACHjI,IAAQG,SADL,OAGS,IAHT,OAGXf,KAAKiJ,YACdL,EAASyD,EAAY,KAAM,KAAM,MAAM,IAJnB,2CAAN,uDASPjI,IArDK,WAAmC,IAAlCpH,EAAiC,uDAAzBV,EAAcW,EAAW,uCAClD,OAAQA,EAAOH,MAEX,IAdc,gBAeV,OAAO,2BACAE,GACAC,EAAO+C,MAElB,IAlBmB,qBAmBf,OAAO,2BACAhD,GADP,IACc8F,WAAY7F,EAAO6F,aAErC,QACI,OAAO9F,K,mBC1BnBZ,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,IAAM,oBAAoB,KAAO,qBAAqB,IAAM,oBAAoB,OAAS,uBAAuB,OAAS,yB,mBCDvMD,EAAOC,QAAU,IAA0B,kC,gCCA3C,oEAAO,IAAM0B,EAAgB,SAAC8L,GAC1B,IAAIA,EAEJ,MAAO,uBAGEwB,EAAmB,SAACD,GAAD,OAAe,SAACvB,GAC5C,GAAIA,GAASA,EAAMkE,OAAO3C,EAAW,MAAM,sBAAN,OAA6BA,EAA7B,Q,mBCNzChP,EAAOC,QAAU,CAAC,KAAO,qBAAqB,KAAO,uB,mBCArDD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,oBAAoB,MAAQ,qBAAqB,MAAQ,uB,gHCGlG6B,G,MAAc,SAAC,GAA+B,IAA7BP,EAA4B,EAA5BA,MAAOuQ,EAAqB,EAArBA,KAASzP,EAAY,gCAChD0P,EAAWD,EAAKE,SAAWF,EAAK5Q,MACtC,OAAO,yBAAKC,UAAWC,IAAQ6Q,YAAc,KAAOF,EAAW3Q,IAAQF,MAAQ,KACxD,aAAlBmB,EAAMT,QAAyB,8CAAcL,EAAWc,IAAW,2CAAWd,EAAWc,IACxF0P,EAAW,8BAAOD,EAAK5Q,OAAgB,S,mBCPjDlB,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,mBAAqB,2C,mBCA3HD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,WAAa,gC,qICG1DiS,EAA0B,SAACtR,GAAD,MAAY,CACtC8B,OAAQ9B,EAAMmC,KAAKL,SAEV6J,EAAmB,SAAC1J,GAAe,IACtCsP,EADqC,uKAGnC,OAAK1P,KAAKJ,MAAMK,OAET,kBAACG,EAAcJ,KAAKJ,OAFI,kBAAC,IAAD,CAAUM,GAAG,eAHT,GACXC,IAAMC,WAUtC,OAFmCC,YAAQoP,EAARpP,CAAiCqP,K,mBCfxEnS,EAAOC,QAAU,CAAC,KAAO,mBAAmB,IAAM,oB,mBCDlDD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.da786f0c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2why_\",\"loader\":\"Preloader_loader__zu6RP\",\"spin\":\"Preloader_spin__30SMv\"};","let initialState = {\r\n    dialog: [\r\n        { id: 1, name: 'Mekhri' },\r\n        { id: 2, name: 'Madina' },\r\n        { id: 3, name: 'Iroda' },\r\n        { id: 4, name: 'Alyona' },\r\n        { id: 5, name: 'Katya' },\r\n        { id: 6, name: 'Feruza' }\r\n    ],\r\n    message: [\r\n        { id: 1, text: 'Hey' },\r\n        { id: 2, text: 'How u doin?' },\r\n        { id: 3, text: 'Well Im doin just fine...' },\r\n    ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SEND-MESSAGE':\r\n            return {\r\n                ...state,\r\n                message: [...state.message, {\r\n                    id: 4,\r\n                    text: action.newMessageBody\r\n                }],\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessage = (newMessageBody) => ({ type: 'SEND-MESSAGE', newMessageBody });\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"ProfileInfo_head__120Ls\",\"conText\":\"ProfileInfo_conText__fAVbL\",\"main\":\"ProfileInfo_main__1YITr\",\"img\":\"ProfileInfo_img__3vm8z\",\"input\":\"ProfileInfo_input__16q79\",\"jobInfo\":\"ProfileInfo_jobInfo__16GXR\"};","module.exports = __webpack_public_path__ + \"static/media/sun.5b98826e.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.1f0524e0.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Render_preloader__jFYOS\"};","import React from 'react';\r\nimport classes from './Login.module.css'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { FormControl } from '../FormsControls/FormsControls';\r\nimport { requiredField } from '../../utils/validators/validators';\r\nimport styles from './../FormsControls/FormsControl.module.css'\r\nlet Login = ({handleSubmit, error}) => {\r\n    return <div className={classes.login}>\r\n        <h1>Login</h1>        \r\n        <form action=\"\" onSubmit={handleSubmit} className = {classes.form}>\r\n            <div className={classes.input}>\r\n                <Field type={'text'} placeholder={'Login'} validate={requiredField}\r\n                    name={'email'} element='input' component={FormControl} />\r\n            </div>\r\n            <div className={classes.input}>\r\n                <Field type={'password'} placeholder={'Password'} validate={requiredField}\r\n                    name={'password'} element='input' component={FormControl} />\r\n            </div>\r\n            <div className={classes.check}>\r\n                <Field type={'checkbox'} name={'rememberMe'} component={'input'} /> <p>remember me</p>\r\n            </div>\r\n            {error && <div className={styles.form_summary_error}>\r\n                {error}\r\n\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(Login);\r\n\r\n\r\nexport default (LoginReduxForm);","import React from 'react';\r\nimport LoginReduxForm from './Login';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../Redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    onSubmitForm = (formData) => {\r\n        this.props.login(formData.email, formData.password, formData.rememberData)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isAuth) {\r\n            return <Redirect to={'/profile'} />\r\n        }\r\n        return <LoginReduxForm onSubmit={this.onSubmitForm}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(LoginContainer);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Nav_navbar__3ekTq\",\"item\":\"Nav_item__34QKN\",\"active\":\"Nav_active__1RodM\",\"img\":\"Nav_img__Bli8M\"};","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"5583a7fb-3e8c-4d0c-924e-60b4f6780534\"\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\n\r\nexport const UsersAPI = {\r\n    getUsers(selectedPage, pageSize) {\r\n        return instance.get(`users?page=${selectedPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    unfollowUser(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    followUser(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    }\r\n}\r\n\r\nexport const ProfileAPI = {\r\n    setUserProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    getProfileStatus(userId){\r\n        return instance.get(`profile/status/${userId}`)\r\n        .then(response => {\r\n            return response.data;\r\n        })\r\n    },\r\n    updateProfileStatus(status){\r\n        return instance.put('profile/status', {status: status});\r\n    }\r\n}\r\n\r\n\r\nexport const AuthAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe=false){\r\n        return instance.post('auth/login', {email, password, rememberMe})\r\n    },\r\n    logout(){\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3EZ4k\",\"wrap\":\"Users_wrap__1RU0A\",\"img\":\"Users_img__3nVJF\",\"user\":\"Users_user__3KZvT\",\"info\":\"Users_info__1aNp0\",\"ns\":\"Users_ns__3whuz\",\"location\":\"Users_location__3gi1l\",\"status\":\"Users_status__2Kn4o\",\"country\":\"Users_country__3mygg\",\"disabled\":\"Users_disabled__2BN04\"};","module.exports = __webpack_public_path__ + \"static/media/preload.d932485d.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ProfileAPI } from \"./api/api\";\r\n\r\nconst SET_USER_PROFILE = 'webmax-network/profile/SET_USER_PROFILE';\r\nconst ADD_POST = 'webmax-network/profile/ADD_POST';\r\nconst SET_STATUS = 'webmax-network/profile/SET_STATUS';\r\nconst DELETE_POST = 'webmax-network/profile/DELETE_POST';\r\n\r\n\r\nlet initialState = {\r\n    post: [\r\n        { item: 1, text: 'Hi', likes: 15 },\r\n        { item: 2, text: 'How are you?', likes: 20 },\r\n        { item: 3, text: 'Well Im doin just fine', likes: 14 },\r\n        { item: 4, text: 'I lied Im dying inside', likes: 5 }\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state, //поверхерсная копия\r\n                post: [...state.post, {\r\n                    item: 5,\r\n                    text: action.newPostText,\r\n                    likes: 45\r\n                }],//глубокая копия\r\n            }\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                post: state.post.filter(p => p.id !== action.postID)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = (newPostText) => ({ type: ADD_POST, newPostText });\r\n\r\nexport const setUserProfile = (data) =>\r\n    ({ type: SET_USER_PROFILE, profile: data });\r\n\r\nexport const setStatus = (status) =>\r\n    ({ type: SET_STATUS, status });\r\n\r\nexport const deletePost = (postID) =>\r\n    ({ type: DELETE_POST, postID });\r\n\r\nexport const setProfile = (userId) => async (dispatch) => {\r\n    dispatch(setUserProfile(await ProfileAPI.setUserProfile(userId)));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let data = await ProfileAPI.getProfileStatus(userId);\r\n    dispatch(setStatus(data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = ProfileAPI.updateProfileStatus(status)\r\n\r\n    if (response.resultCode === 0)\r\n        dispatch(setStatus(status));\r\n}\r\n\r\nexport default profileReducer;","let initialState = {\r\n    friends: [\r\n        {friend: 'Mekhri'},\r\n        {friend: 'Madina'},\r\n        {friend: 'Iroda' },\r\n        {friend: 'Alyona'},\r\n        {friend: 'Katya' },\r\n        {friend: 'Feruza'},\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import { UsersAPI } from \"./api/api\";\r\n\r\nconst FOLLOW = 'webmax-network/users/FOLLOW';\r\nconst UNFOLLOW = 'webmax-network/users/UNFOLLOW';\r\nconst SETUSER = 'webmax-network/users/SET-USER';\r\nconst SET_PAGE = 'webmax-network/users/SET-PAGE';\r\nconst SET_TOTAL = 'webmax-network/users/SET_TOTAL';\r\nconst TOGGLE_IS_FETCHING = 'webmax-network/users/TOGGLE_IS_FETCHING';\r\nconst FOLLOWING_PROCCESS = 'webmax-network/users/FOLLOWING_PROCCESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUserCount: 0,\r\n    selectedPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n    portionSize: 10\r\n};\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u;\r\n                })\r\n\r\n            }\r\n        case SETUSER:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n\r\n        case SET_PAGE:\r\n            return {\r\n                ...state, selectedPage: action.selectedPage\r\n            }\r\n\r\n        case SET_TOTAL:\r\n            return {\r\n                ...state, totalUserCount: action.totalUserCount\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case FOLLOWING_PROCCESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ?\r\n                    [...state.followingInProgress, action.userID]\r\n                    : state.followingInProgress.filter(id => id !== action.userID)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userID) => ({ type: FOLLOW, userID });//AC -> Action Creator\r\nexport const unfollowSuccess = (userID) => ({ type: UNFOLLOW, userID });\r\nexport const setUser = (users) => ({ type: SETUSER, users });\r\nexport const setCurrentPage = (selectedPage) => ({ type: SET_PAGE, selectedPage });\r\nexport const setTotalUsers = (totalUserCount) => ({ type: SET_TOTAL, totalUserCount });\r\nexport const setToggleFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const setToggleProgress = (isFetching, userID) => ({ type: FOLLOWING_PROCCESS, isFetching, userID });\r\n\r\nexport const getUsers = (selectedPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setCurrentPage(selectedPage));\r\n        dispatch(setToggleFetching(true));\r\n        let data = await UsersAPI.getUsers(selectedPage, pageSize);\r\n        dispatch(setToggleFetching(false));\r\n        dispatch(setUser(data.items));\r\n        dispatch(setTotalUsers(data.totalCount));\r\n    }\r\n}\r\nexport const unfollow = (id) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = UsersAPI.followUser.bind(UsersAPI);\r\n        let actionCreator = unfollowSuccess;\r\n        dispatch(setToggleProgress(true, id));\r\n        let data = await apiMethod(id)\r\n        if (data.resultCode === 0) {\r\n            dispatch(actionCreator(id));\r\n        }\r\n        dispatch(setToggleProgress(false, id));\r\n    }\r\n}\r\nexport const follow = (id) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = UsersAPI.followUser.bind(UsersAPI);\r\n        let actionCreator = followSuccess;\r\n        dispatch(setToggleProgress(true, id));\r\n        let data = await apiMethod(id);\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(actionCreator(id));\r\n        }\r\n        dispatch(setToggleProgress(false, id));\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import { authUser } from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZE = 'SET_INITIALIZE';\r\nconst SET_MODE = 'SET_MODE';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    nightMode: false\r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZE:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        case SET_MODE:\r\n            return {\r\n                ...state,\r\n                nightMode: !state.nightMode\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setInitializedSuccess = () =>\r\n    ({ type: SET_INITIALIZE });//AC -> Action Creator\r\n\r\nexport const setMode = () =>\r\n    ({ type: SET_MODE });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    dispatch(authUser())\r\n        .then(() => {\r\n            dispatch(setInitializedSuccess());\r\n        })\r\n}\r\n\r\n\r\nexport default appReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport dialogsReducer from './DialogsReducer';\r\nimport profileReducer from './ProfileReducer';\r\nimport sidebarReducer from './SidebarReducer';\r\nimport usersReducer from './UsersReducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from './appReducer';\r\n\r\nlet reducers = combineReducers({\r\n    messagePage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n}\r\n);\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport classes from './Nav.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport moon from './../../assets/images/moon.png'\r\nimport sun from './../../assets/images/sun.png'\r\n// import Friends from './Friends/Friends';\r\n\r\nconst Navbar = (props) =>{\r\n    return <nav className={classes.navbar}>\r\n    <div className = {classes.item}>\r\n      <NavLink to = '/profile' activeClassName = {classes.active}>Profile</NavLink>\r\n    </div>\r\n    <div className = {classes.item}>\r\n      <NavLink to = '/dialogs' activeClassName = {classes.active}>Messages</NavLink>\r\n    </div>\r\n    <div className = {classes.item}>\r\n      <NavLink to = '/news' activeClassName = {classes.active}>News</NavLink>\r\n    </div>\r\n    <div className = {classes.item}>\r\n      <NavLink to = '/music' activeClassName = {classes.active}>Music</NavLink>\r\n    </div>\r\n    <br/>\r\n    <div className = {classes.item}>\r\n      <NavLink to = '/users' activeClassName = {classes.active}>Users</NavLink>\r\n    </div>\r\n    <br/>\r\n    <div className = {classes.item}>\r\n      <NavLink to = '/settings' activeClassName = {classes.active}>Settings</NavLink>\r\n    </div>\r\n    <br/>\r\n    <div className = {classes.img}>\r\n      <img src={props.nightMode ?  moon : sun} alt=\"\" srcset=\"\" onClick = {props.setMode}/>\r\n    </div>\r\n  </nav>\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport classes from './News.module.css';\r\n\r\nconst News = () =>{\r\n    return <div>\r\n      Here are news!!!!!!!!!\r\n    </div>\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport classes from './Settings.module.css';\r\n\r\nconst Settings = () =>{\r\n    return <div>\r\n      Here are settings!!!!!!!!!\r\n    </div>\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport classes from './Music.module.css';\r\n\r\nconst Music = () =>{\r\n    return <div>\r\n      Here is music!!!!!!!!\r\n    </div>\r\n}\r\n\r\nexport default Music;","import React, { useState } from 'react'\r\nimport classes from './Paginator.module.css';\r\n\r\nlet Paginator = (props) => {\r\n    let pageCount = Math.ceil(props.totalUserCount / props.pageSize);\r\n\r\n    let pages = [];\r\n\r\n    for (var i = 1; i <= pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n   \r\n    let portionCount = Math.ceil(pageCount/props.portionSize);\r\n    let [portionNumber, setPortionNumebr] = useState(1);\r\n    let leftPortionNumber = (portionNumber - 1)* props.portionSize +1;\r\n    let rightPortionNumeber = props.portionSize*portionNumber;\r\n\r\n\r\n\r\n\r\n    return <div className={classes.wrap}>\r\n        <div className={classes.pagination}>\r\n            {portionNumber >1 && <button onClick = {()=> setPortionNumebr(portionNumber-1)}>Prev</button>}\r\n            {pages\r\n            .filter(p => p>= leftPortionNumber && p<=rightPortionNumeber)\r\n            .map(p =>{\r\n                return <span key = {p} className = {classes.page + props.selectedPage === p && classes.selected} onClick={(e) => props.onPageChange(p)}>{p}</span>\r\n            })}\r\n            {portionCount >portionNumber && <button onClick = {()=>setPortionNumebr(portionNumber+1)}>Next</button>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react'\r\nimport classes from './Users.module.css';\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport { NavLink } from 'react-router-dom';\r\nimport Paginator from '../Common/Paginator';\r\n\r\nlet Users = ({ portionSize, currentPage, pageSize, users, selectedPage, followingInProgress, unfollow, follow, onPageChange, totalUserCount }) => {\r\n\r\n\r\n    return <div>\r\n        <Paginator portionSize = {portionSize} currentPage={currentPage} pageSize = {pageSize}onPageChange={onPageChange} \r\n        totalUserCount={totalUserCount} selectedPage = {selectedPage}/>\r\n\r\n        {users.map(u => <div key={u.id}>\r\n            <div className={classes.users}>\r\n                <div className={classes.user}>\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                        <img src={u.photos.small != null ?\r\n                            u.photos.small : userPhoto}\r\n                            alt=\"\" className={classes.img} />\r\n                    </NavLink>\r\n                    {u.followed ?\r\n                        <button disabled={followingInProgress.some(id => id === u.id)}\r\n                            onClick={() => {\r\n                                unfollow(u.id);\r\n                            }}\r\n                            className={classes.btn}>Unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === u.id)}\r\n                            onClick={() => {\r\n                                follow(u.id);\r\n                            }}\r\n                            className={classes.btn}>Follow</button>}\r\n                </div>\r\n                <div className={classes.info}>\r\n                    <div className={classes.ns}>\r\n                        <div className={classes.name}>\r\n                            {u.name}\r\n                        </div>\r\n                        <div className={classes.status}>\r\n                            {u.status}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"gap\"></div>\r\n                    <div className={classes.location}>\r\n                        <div className={classes.city}>\r\n                            {\"u.location.city\"},\r\n                        </div>\r\n                        <div className={classes.country}>\r\n                            {\"u.location.country\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>)}\r\n    </div>\r\n}\r\n\r\nexport default Users;","import React from 'react'\r\nimport preloader from './../../../assets/images/preload.svg'\r\nimport classes from './Preloader.module.css'\r\n\r\nlet Preloader = (props) =>{\r\n    return <div className = {classes.preloader}>\r\n        <div className = {classes.loader}></div>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import { createSelector } from \"reselect\"\r\n\r\nexport const usersSelector = (state) =>{\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const users = createSelector(usersSelector, (users)=>{\r\n    return users.filter(u=> true);\r\n})\r\n\r\n\r\nexport const getPageSize = (state) =>{\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getPageSizeSuper = createSelector((state)=>{\r\n    return state.usersPage.pageSize.filter(u=> true);\r\n})\r\n\r\nexport const getTotalUsersCount = (state) =>{\r\n    return state.usersPage.totalUserCount\r\n}\r\n\r\nexport const getSelectedPage = (state) =>{\r\n    return state.usersPage.selectedPage\r\n}\r\n\r\nexport const getIsFetching = (state) =>{\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) =>{\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\n","import React from 'react'\r\nimport Users from './Users';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport { connect } from 'react-redux';\r\nimport { unfollow, follow, getUsers, setCurrentPage, setToggleProgress } from './../../Redux/UsersReducer';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { users, getPageSize, getSelectedPage, getTotalUsersCount, getIsFetching, getFollowingInProgress, usersSuper } from '../../Redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getUsers(this.props.selectedPage, this.props.pageSize);\r\n\r\n        // this.props.setToggleFetching(true);\r\n        // UsersAPI.getUsers(this.props.selectedPage, this.props.pageSize)\r\n        //     .then(data => {\r\n        //         this.props.setToggleFetching(false);\r\n        //         this.props.setUser(data.items);\r\n        //         this.props.setTotalUsers(data.totalCount);\r\n        //     });\r\n\r\n    }\r\n\r\n    onPageChange = (p) => {\r\n        this.props.getUsers(p, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : <Users onPageChange={this.onPageChange}\r\n                totalUserCount={this.props.totalUserCount}\r\n                pageSize={this.props.pageSize}\r\n                selectedPage={this.props.selectedPage}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n                portionSize = {this.props.portionSize} />}\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: users(state),\r\n        pageSize: getPageSize(state),\r\n        totalUserCount: getTotalUsersCount(state),\r\n        selectedPage: getSelectedPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        portionSize: state.usersPage.portionSize\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps,\r\n        {\r\n            follow, unfollow, setCurrentPage,\r\n            setToggleProgress, getUsers\r\n        })\r\n)(UsersContainer);","import React, { useEffect, useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return <div className={classes.status}>\r\n        <div>\r\n            <h1 className={classes.head}>Status</h1>\r\n        </div>\r\n        <div>\r\n            <input type=\"text\" placeholder='No status'\r\n                className={classes.input}\r\n                onClick={activateEditMode}\r\n                onBlur={deactivateEditMode}\r\n                onChange= {onStatusChange}\r\n                value={status} />\r\n        </div>\r\n        <div>\r\n            {editMode &&\r\n                <button className={classes.btn}>Save</button>\r\n            }\r\n        </div>\r\n        <br />\r\n    </div>\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false,\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) \r\n        this.setState({ status: this.props.status });\r\n    }\r\n\r\n    // AddStatus = () => {\r\n    //     return <form onSubmit = { this.props.handleSubmit}>\r\n    //         <Field component = {'input'} type=\"text\" \r\n    //         name={'status'}placeholder='Enter status...'\r\n    //                 onClick={this.activateEditMode}\r\n    //                 onBlur={this.deactivateEditMode}\r\n    //                 value={!this.state.status ? '' : this.state.status} />\r\n\r\n    //             <div>{this.state.editMode ? <button className={classes.btn}>Save</button> : null}</div>\r\n    //     </form>\r\n    // }\r\n\r\n    // AddStatusRedux = reduxForm({ form: 'status' })(this.AddStatus);\r\n    \r\n\r\n    render() {\r\n        return <div className={classes.status}>\r\n            <div>\r\n                <h1 className={classes.head}>Status</h1>\r\n            </div>\r\n\r\n\r\n            {/* <this.AddStatusRedux onSubmit = {this.onStatusChange}/> */}\r\n\r\n\r\n            <div>\r\n                <input type=\"text\" placeholder='No status'\r\n                    className = {classes.input}\r\n                    onChange={this.onStatusChange}\r\n                    onClick={this.activateEditMode}\r\n                    onBlur={this.deactivateEditMode}\r\n                    value={this.state.status}/>\r\n            </div>\r\n            <div>\r\n                {this.state.editMode ? <button className={classes.btn}>Save</button> : null}\r\n            </div> \r\n            <br />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport user from '../../../assets/images/user.png';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n  return <div>\r\n    <div className={classes.main}>\r\n      <img src={props.profile.photos.large === null ||\r\n        props.profile.photos.small === null ? user : props.profile.photos.large} className={classes.img} />\r\n      <div className={classes.conText}>\r\n        <h1 className={classes.head}>{props.profile.fullName}</h1>\r\n        <div className={classes.profInfo}>\r\n          <p>Facebook: <a href={props.profile.contacts.facebook}>{!props.profile.contacts.facebook ? '-'\r\n              : props.profile.contacts.facebook}</a></p>\r\n          <p>WebSite: <a href={props.profile.contacts.website === null ?\r\n            null : props.profile.contacts.website}> {!props.profile.contacts.website ? '-'\r\n              : props.profile.contacts.website}</a></p>\r\n          <p>GitHub: <a href={!props.profile.contacts.github ?\r\n            null : props.profile.contacts.github}>{!props.profile.contacts.github ? '-'\r\n              : props.profile.contacts.github}</a></p>\r\n        </div>\r\n      </div>\r\n      <div className={classes.jobInfo}>\r\n    <br/>\r\n          <h1 className={classes.head}>Job State</h1>\r\n          <p>Looking For A Job: {props.profile.lookingForAJobDescription === null\r\n           ? '-' : props.profile.lookingForAJobDescription}</p>\r\n           <ProfileStatusWithHooks status = {props.status} updateStatus ={props.updateStatus}/>\r\n        </div>\r\n  </div>\r\n    </div>\r\n   \r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\nimport user from '../../../../assets/images/user.png'\r\n\r\nconst Post = (props) => {\r\n  return <div>\r\n    <div className={classes.item}>\r\n      {!props.profile ? <img src = {user} className = {classes.img}/> : <img src={props.profile.photos.large === null ||\r\n        props.profile.photos.small === null ? user : props.profile.photos.large} className={classes.img} />}\r\n  \r\n      <p>{props.message}</p>\r\n    </div>\r\n    <span>Likes: </span>{props.likes}\r\n  </div>\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPost.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { requiredField, maxLengthCreator } from './../../../utils/validators/validators'\r\nimport { FormControl } from './../../FormsControls/FormsControls'\r\n\r\nconst MyPost = React.memo(props => {\r\n\r\n\r\n  let postElements = [...props.post]\r\n  .reverse()\r\n  .map(post => {\r\n    return <Post message={post.text} likes={post.likes} profile={props.profile} />\r\n  });\r\n\r\n\r\n  let onPostSubmit = (value) => {\r\n    props.addPost(value.newPostBody);\r\n  }\r\n\r\n\r\n  return <div className={classes.form}>\r\n    <div className={classes.newPost}>\r\n      <h1 className={classes.head}>My posts</h1>\r\n      <NewPostRedux onSubmit={onPostSubmit} />\r\n    </div>\r\n    <div className={classes.post}>\r\n      <p>{postElements}</p>\r\n    </div>\r\n  </div>\r\n})\r\n\r\nconst maxLength = maxLengthCreator(10);\r\n\r\nlet NewPost = (props) => {\r\n  return <form action=\"\" onSubmit={props.handleSubmit}>\r\n    <Field component={FormControl} name={'newPostBody'}\r\n      element='textarea'\r\n      placeholder={'Send news...'}\r\n      validate={[requiredField, maxLength]} />\r\n    <button class={classes.btn}>Publish</button>\r\n  </form>\r\n}\r\n\r\n\r\nconst NewPostRedux = reduxForm({ form: 'newPostBody' })(NewPost);\r\n\r\nexport default MyPost;","import React from 'react';\r\nimport { addPost }\r\n  from '../../../Redux/ProfileReducer';\r\nimport MyPost from './MyPost';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    post: state.profilePage.post,\r\n    newPostText: state.profilePage.newPostText,\r\n    profile: state.profilePage.profile\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { addPost })(MyPost);;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostContainer from './MyPost/MyPostContainer';\r\nimport classes from './Profile.module.css';\r\n\r\n\r\nconst Profile = (props) => {\r\n  return <div className = {classes.main}>\r\n    <ProfileInfo profile = {props.profile} status = {props.status} \r\n    updateStatus = {props.updateStatus}/>\r\n    <MyPostContainer profile = {props.profile} />\r\n  </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { setProfile, getStatus, updateStatus } from '../../Redux/ProfileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.loggedUserId;\r\n        }\r\n\r\n        this.props.setProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.profile} \r\n        status={this.props.status}\r\n        updateStatus = {this.props.updateStatus}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    loggedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth \r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport logo from '../../assets/images/logo.png'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n\r\n  return <header className={classes.header}>\r\n    <img src={logo} className={classes.img} /> <h2 className={classes.head}>webMax</h2>\r\n    <h2 className={classes.info}>{props.isAuth ?\r\n      <div className = {classes.logged}>{props.login} <a onClick = {props.logout}className={classes.logout}>Logout</a></div> : <NavLink to={'/login'} className={classes.log}>Login</NavLink>}</h2>\r\n\r\n  </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { setUserData, logout } from '../../Redux/auth-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n  render() {\r\n    return <Header {...this.props}/>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {setUserData, logout})(HeaderContainer);","import React from 'react';\r\nimport classes from './Nav.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport moon from './../../assets/images/moon.png'\r\nimport Navbar from './Nav';\r\nimport { setMode } from '../../Redux/appReducer';\r\nimport { connect } from 'react-redux';\r\n// import Friends from './Friends/Friends';\r\n\r\nclass NavContainer extends React.Component{\r\n    render(){\r\n       return <Navbar setMode = {this.props.setMode} nightMode = {this.props.nightMode}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps =(state) =>({\r\n  nightMode: state.app.nightMode\r\n})\r\n\r\nexport default connect(mapStateToProps,\r\n  { setMode })(NavContainer);","import React, { Suspense } from 'react'\r\nimport Nav from './../Navbar/Nav';\r\nimport { Route } from 'react-router-dom';\r\nimport News from './../News/News';\r\nimport Settings from './../Settings/Settings';\r\nimport Music from './../Music/Music';\r\n//import DialogsContainer from './../Dialogs/DialogContainer';\r\nimport UsersContainer from './../Users/UsersContainer';\r\nimport ProfileContainer from './../Profile/ProfileContainer';\r\nimport HeaderContainer from './../Header/HeaderContainer';\r\n// import LoginContainer from './../Login/LoginContainer';\r\nimport NavContainer from '../Navbar/NavContainer';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\n\r\nconst DialogsContainer = React.lazy(() => { return import('./../Dialogs/DialogContainer') });\r\nconst LoginContainer = React.lazy(() => { return import('./../Login/LoginContainer') });\r\n\r\nlet Render = (props) => {\r\n    return <div>\r\n        <canvas className={'body' + ' ' + (props.nightMode === true ? 'night' : '')}></canvas>\r\n        <div className={'wrapper' + ' ' + (props.nightMode === true ? 'nightMode' : '')}>\r\n            <HeaderContainer />\r\n            <NavContainer />\r\n            <div className='app-wrapper-content'>\r\n                <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\r\n                <Route exact path='/dialogs' render={() => {\r\n                    return <Suspense fallback={<Preloader />}><DialogsContainer /></Suspense>\r\n                }} />\r\n                <Route path='/news' render={() => <News />} />\r\n                <Route path='/music' render={() => <Music />} />\r\n                <Route path='/users' render={() => <UsersContainer />} />\r\n                <Route path='/settings' render={() => <Settings />} />\r\n                <Route path='/login' render={() => {\r\n                return <Suspense fallback={<Preloader />}><LoginContainer /></Suspense> }} />\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Render;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Render from './Render'\r\nimport { withRouter, Redirect, Route } from 'react-router-dom'\r\nimport LoginContainer from '../Login/LoginContainer'\r\nimport { initializeApp } from '../../Redux/appReducer'\r\nimport Preloader from '../Common/Preloader/Preloader'\r\nimport classes from './Render.module.css'\r\n\r\n\r\nclass RenderContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n    render() {\r\n        if (!this.props.initialized) return <div className={classes.preloader}><Preloader /></div>\r\n        if (!this.props.isAuth) {\r\n            return <div>\r\n                <Redirect to='/login' />\r\n                <Route path='/login' render={() => <LoginContainer />} />\r\n            </div>\r\n        }\r\n        return <Render {...this.props} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        props: state.props,\r\n        initialized: state.app.initialized,\r\n        nightMode: state.app.nightMode\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps,\r\n    { initializeApp })(RenderContainer));","import React from 'react';\nimport './App.css';\nimport RenderContainer from './components/Render/RenderContainer';\nimport { Provider } from 'react-redux';\nimport store from './Redux/redux-store';\nimport { HashRouter } from 'react-router-dom';\n\n\n\n//Componenta that returns hypertext JSX\nconst App = (props) => {\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <RenderContainer />\n        {/* <div className={state.nightMode.nightMode === true ? 'nightMode' : ''}> */}\n        {/* <div className={'wrapper'}>\n          <HeaderContainer />\n          <Nav state={props.state} />\n          <div className='app-wrapper-content'>\n            <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n            <Route exact path='/dialogs' render={() => <DialogsContainer />} />\n            <Route path='/news' render={() => <News />} />\n            <Route path='/music' render={() => <Music />} />\n            <Route path='/users' render={() => <UsersContainer />} />\n            <Route path='/settings' render={() => <Settings />} />\n            <Route path='/login' render={() => <LoginContainer />} />\n          </div>\n        </div> */}\n        {/* </div> */}\n      </Provider>\n    </HashRouter>\n  );\n}\n\nexport default App;","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from './Redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { AuthAPI } from \"./api/api\";\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserData = (id, email, login, isAuth) =>\r\n    ({ type: SET_USER_DATA, data: { id, email, login, isAuth } });//AC -> Action Creator\r\n\r\nexport const authUser = () => async (dispatch) => {\r\n    let response = await AuthAPI.authMe();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data;\r\n        dispatch(setUserData(id, email, login, true))\r\n\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await AuthAPI.login(email, password, rememberMe)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(authUser());\r\n    }\r\n    else {\r\n        let message = response.data.messages.length > 0 ?\r\n            response.data.messages[0] : 'Wrong password or email';\r\n        dispatch(stopSubmit('login',\r\n            { _error: message }));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await AuthAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__tJojP\",\"head\":\"Header_head__23Qfu\",\"img\":\"Header_img__3vouF\",\"info\":\"Header_info__2WLaP\",\"log\":\"Header_log__1dA7_\",\"logout\":\"Header_logout__e25NA\",\"logged\":\"Header_logged__2w7B1\"};","module.exports = __webpack_public_path__ + \"static/media/user.220a7062.png\";","export const requiredField = (value) => {\r\n    if (value) return undefined\r\n\r\n    return \"Field is requiered!\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length>maxLength) return `Field is more than ${maxLength}!`;\r\n    return undefined;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MyPost_form__21YND\",\"head\":\"MyPost_head__1f7CD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1G_y3\",\"form\":\"Login_form__oQdEl\",\"input\":\"Login_input__yy053\",\"check\":\"Login_check__3il5V\"};","import React from 'react'\r\nimport classes from './FormsControl.module.css'\r\nimport { Field } from 'redux-form';\r\n\r\nexport const FormControl = ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return <div className={classes.formControl + ' ' + (hasError ? classes.error : '')}>\r\n        {props.element === 'textarea' ? <textarea {...input} {...props}/> : <input {...input} {...props}/>}\r\n        {(hasError ? <span>{meta.error}</span> : null)}\r\n    </div>\r\n}\r\n\r\nexport const createField = ({placeholder, name, validators, type, element}) =>{\r\n    return <Field placeholder = {placeholder} name = {name} \r\n    validators = {validators} component = {FormControl} type={type} element = {element}/>\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__3KbBV\",\"error\":\"FormsControl_error__3w72a\",\"form_summary_error\":\"FormsControl_form_summary_error__2h-RN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Paginator_wrap__2Msd0\",\"pagination\":\"Paginator_pagination__36qrA\"};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n\r\n    return ConnectAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3b_vU\",\"img\":\"Post_img__cd2Vp\"};","module.exports = __webpack_public_path__ + \"static/media/moon.fc29bc18.png\";"],"sourceRoot":""}